@page "/template"

<PageTitle>Sort</PageTitle>

<div class="d-flex gap-3 mb-3">
    @for (int i = 0; i < pole.Length; i++)
    {
        if (i == index)
        {
            <div class="fs-1 border-bottom border-primary border-3">@pole[i]</div>
        }
        else if(i == j)
        {
            <div class="fs-1 border-bottom border-secondary border-3">@pole[i]</div>
        }
        else
        {
            <div class="fs-1">@pole[i]</div>
        }
    }
</div>

<div class="fs-1 mb-3">minimum @pole[min_index]</div>

<button class="btn btn-primary" @onclick="DalsiIterace">Next Iteration</button>


@code {

    private int[] pole = GenerujCisla(9, 9);

    int index;
    int min_index;
    int j;


    protected override void OnInitialized()
    {
        Inicializace();
    }

    void Inicializace()
    {
        index = 0;
        min_index = 0;
        j = 0;
    }

    void DalsiIterace()
    {
        if(j < pole.Length - 1)
        {
            ++j;


        }
        else
        {


            index = (index + 1) % (pole.Length - 2);
            j = index;
            min_index = index;
        }
    }

    public static int[] GenerujCisla(int n, int max)
    {
        if (n > max)
        {
            throw new ArgumentException("n must be less than or equal to max");
        }

        int[] pole = new int[n];

        for (int i = 0; i < max; ++i)
        {
            if (i < n)
            {
                pole[i] = i + 1;
            }
            else
            {
                int randomIndex = Random.Shared.Next(0, i + 1);

                if (randomIndex < n)
                {
                    pole[randomIndex] = i + 1;
                }
            }
        }

        Random.Shared.Shuffle(pole);

        return pole;
    }
}
