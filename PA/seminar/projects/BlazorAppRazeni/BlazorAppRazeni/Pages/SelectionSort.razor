@page "/select"

<PageTitle>Select Sort</PageTitle>

<div class="d-flex gap-3 mb-3">
    @for (int i = 0; i < pole.Length; i++)
    {
        if (i == index)
        {
            <div class="fs-1 border-bottom border-primary border-3">@pole[i]</div>
        }
        else if(i == j)
        {
            <div class="fs-1 border-bottom border-secondary border-3">@pole[i]</div>
        }
        else
        {
            <div class="fs-1">@pole[i]</div>
        }
    }
</div>

<div class="fs-1 mb-3">minimum @pole[min_index]</div>

<button class="btn btn-primary" @onclick="DalsiIterace">Next Iteration</button>

<div class="rz-p-0 rz-p-md-12">
    <RadzenChart>
        <RadzenColumnSeries Data="@Data" CategoryProperty="Caption" ValueProperty="Data">
            <RadzenSeriesDataLabels Visible="true" />
        </RadzenColumnSeries>
        <RadzenLegend Visible="false" />
    </RadzenChart>
</div>

@code {
    DataItem[] Data => pole.Select((x, i) => new DataItem((i == j) ? $">{i + 1}<" : $"{i + 1}", x)).ToArray();

    private int[] pole = ReservoarSampling.Generate(9, 9);

    int index;
    int j;
    int min_index;

    protected override void OnInitialized()
    {
        Inicializace();
    }

    void Inicializace()
    {
        index = 0;
        min_index = 0;
        j = 0;
    }

    void DalsiIterace()
    {
        if (j < pole.Length - 1)
        {
            ++j;

            if (pole[j] < pole[min_index])
            {
                min_index = j;
            }
        }
        else
        {
            int tmp = pole[index];
            pole[index] = pole[min_index];
            pole[min_index] = tmp;

            index = (index + 1) % (pole.Length - 2);
            min_index = index;
            j = index;
        } 
    }
}
